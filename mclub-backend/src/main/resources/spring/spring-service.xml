<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

       <import resource="spring-mybatis.xml" />

       <!--  import resource="spring-redis.xml" /-->

       <import resource="spring-aop.xml" />

       <!--  <import resource="spring-activemq.xml"/> -->

       <import resource="spring-config.xml"/>

       <context:component-scan base-package="com">
              <context:include-filter type="regex" expression="com.wyy.mclub..service.impl.*ServiceImpl" />
              <context:exclude-filter type="regex" expression="com.wyy.mclub..service.I*Service" />
       </context:component-scan>
       <!--加载线程池线程池配置文件-->
       <bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
              <!-- 线程池活跃的线程数 -->
              <property name="corePoolSize" value="5" />
              <!-- 线程池最大活跃的线程数 -->
              <property name="maxPoolSize" value="10" />
              <!-- 队列的最大容量 -->
              <property name="queueCapacity" value="25" />
              <!-- 线程池维护线程所允许的空闲时间，默认为300s -->
              <property name="keepAliveSeconds" value="60" />
              <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
              <property name="rejectedExecutionHandler">
                     <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
                     <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
                     <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
                     <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
                     <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
              </property>
       </bean>
       <!--<bean id="readyPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
              <!--&lt;!&ndash; 线程池活跃的线程数 &ndash;&gt;-->
              <!--<property name="corePoolSize" value="5" />-->
              <!--&lt;!&ndash; 线程池最大活跃的线程数 &ndash;&gt;-->
              <!--<property name="maxPoolSize" value="10" />-->
              <!--&lt;!&ndash; 队列的最大容量 &ndash;&gt;-->
              <!--<property name="queueCapacity" value="25" />-->
              <!--&lt;!&ndash; 线程池维护线程所允许的空闲时间，默认为300s &ndash;&gt;-->
              <!--<property name="keepAliveSeconds" value="60" />-->
              <!--&lt;!&ndash; 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 &ndash;&gt;-->
              <!--<property name="rejectedExecutionHandler">-->
                     <!--&lt;!&ndash; AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 &ndash;&gt;-->
                     <!--&lt;!&ndash; CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 &ndash;&gt;-->
                     <!--&lt;!&ndash; DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 &ndash;&gt;-->
                     <!--&lt;!&ndash; DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 &ndash;&gt;-->
                     <!--<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />-->
              <!--</property>-->
       <!--</bean>-->
</beans>